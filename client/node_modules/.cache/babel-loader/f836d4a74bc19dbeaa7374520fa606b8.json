{"ast":null,"code":"var _jsxFileName = \"/Users/adriendesart/Desktop/adwebsite/src/app.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleScroll = () => {\n      const {\n        scrollPos\n      } = this.state;\n      this.setState({\n        scrollPos: document.body.getBoundingClientRect().top,\n        scrollDown: document.body.getBoundingClientRect().top < scrollPos\n      });\n    };\n\n    this.getScreenDisplay = () => {\n      const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      const screenOrientation = width > height ? \"landscape\" : \"portrait\";\n\n      const screenDisplay = () => {\n        if (screenOrientation === \"landscape\") {}\n      };\n    };\n\n    this.setLanguage = lang => {\n      this.setState({\n        language: lang\n      });\n    };\n\n    this.state = {\n      language: \"en\",\n      screenDisplay: \"laptop\",\n      //tablet, mobile\n      screenOrientation: \"landscape\",\n      //portrait\n      scrollDown: false,\n      scrollPos: null\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n    this.getScreenDisplay();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/adriendesart/Desktop/adwebsite/src/app.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","App","constructor","props","handleScroll","scrollPos","state","setState","document","body","getBoundingClientRect","top","scrollDown","getScreenDisplay","width","window","innerWidth","documentElement","clientWidth","height","innerHeight","clientHeight","screenOrientation","screenDisplay","setLanguage","lang","language","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,QAIO,kBAJP;AAMA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACvCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAiBlBC,YAjBkB,GAiBH,MAAK;AAChB,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACA,WAAKC,QAAL,CAAc;AACVF,QAAAA,SAAS,EAAEG,QAAQ,CAACC,IAAT,CAAcC,qBAAd,GAAsCC,GADvC;AAEVC,QAAAA,UAAU,EAAEJ,QAAQ,CAACC,IAAT,CAAcC,qBAAd,GAAsCC,GAAtC,GAA4CN;AAF9C,OAAd;AAIH,KAvBiB;;AAAA,SAwBlBQ,gBAxBkB,GAwBC,MAAM;AACrB,YAAMC,KAAK,GACTC,MAAM,CAACC,UAAP,IACAR,QAAQ,CAACS,eAAT,CAAyBC,WADzB,IAEAV,QAAQ,CAACC,IAAT,CAAcS,WAHhB;AAIA,YAAMC,MAAM,GACVJ,MAAM,CAACK,WAAP,IACAZ,QAAQ,CAACS,eAAT,CAAyBI,YADzB,IAEAb,QAAQ,CAACC,IAAT,CAAcY,YAHhB;AAIA,YAAMC,iBAAiB,GAAGR,KAAK,GAACK,MAAN,GAAa,WAAb,GAAyB,UAAnD;;AACA,YAAMI,aAAa,GAAG,MAAK;AACvB,YAAGD,iBAAiB,KAAK,WAAzB,EAAqC,CAExC;AAEA,OALD;AAMH,KAxCiB;;AAAA,SAyClBE,WAzCkB,GAyCJC,IAAI,IAAG;AACjB,WAAKlB,QAAL,CAAc;AAACmB,QAAAA,QAAQ,EAAGD;AAAZ,OAAd;AACH,KA3CiB;;AAEd,SAAKnB,KAAL,GAAa;AACToB,MAAAA,QAAQ,EAAG,IADF;AAETH,MAAAA,aAAa,EAAG,QAFP;AAEiB;AAC1BD,MAAAA,iBAAiB,EAAC,WAHT;AAGsB;AAC/BV,MAAAA,UAAU,EAAG,KAJJ;AAKTP,MAAAA,SAAS,EAAE;AALF,KAAb;AAOH;;AACDsB,EAAAA,iBAAiB,GAAG;AAChBZ,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkC,KAAKxB,YAAvC;AACA,SAAKS,gBAAL;AACH;;AACDgB,EAAAA,oBAAoB,GAAG;AACnBd,IAAAA,MAAM,CAACe,mBAAP,CAA2B,QAA3B,EAAqC,KAAK1B,YAA1C;AACH;;AA6BD2B,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFA,CADJ;AAWH;;AA1DsC","sourcesContent":["import React, { Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nexport default class App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            language : \"en\",\n            screenDisplay : \"laptop\", //tablet, mobile\n            screenOrientation:\"landscape\", //portrait\n            scrollDown : false,\n            scrollPos: null,\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n        this.getScreenDisplay();\n    };\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    };\n    handleScroll = () =>{\n        const { scrollPos } = this.state;\n        this.setState({\n            scrollPos: document.body.getBoundingClientRect().top,\n            scrollDown: document.body.getBoundingClientRect().top < scrollPos\n        });\n    };\n    getScreenDisplay = () => {\n        const width =\n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n        const height =\n          window.innerHeight ||\n          document.documentElement.clientHeight ||\n          document.body.clientHeight;\n        const screenOrientation = width>height?\"landscape\":\"portrait\";\n        const screenDisplay = () =>{\n            if(screenOrientation === \"landscape\"){\n\n        }\n        \n        }\n    };\n    setLanguage = lang =>{\n        this.setState({language : lang})\n    };\n\n    render(){\n        return(\n            <Router>\n            \n            <Switch>\n                <Route exact path=\"/\">\n                    \n                </Route>\n            </Switch>\n            \n            </Router>\n        )\n    };\n}"]},"metadata":{},"sourceType":"module"}