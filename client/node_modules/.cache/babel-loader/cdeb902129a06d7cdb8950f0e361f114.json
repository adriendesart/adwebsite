{"ast":null,"code":"var _jsxFileName = \"/Users/adriendesart/Desktop/adwebsite/src/components/navitem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isVisible } from './../utils/displayed';\nexport default class NavItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false\n    };\n\n    this.handleScroll = () => {\n      this.setState({\n        visible: isVisible(this.props.ancre) !== \"unvisible\" ? true : false\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: styles.navItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: styles.navLink,\n      href: \"#\" + this.props.ancre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: styles.subject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.props.language === \"en\" ? this.props.name.en : this.props.name.fr), React.createElement(\"img\", {\n      style: styles.icon,\n      src: this.props.icon.src,\n      alt: this.props.icon.alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })));\n  }\n\n}\nNavItem.propTypes = {\n  ancre: PropTypes.string,\n  language: PropTypes.string,\n  name: PropTypes.object,\n  icon: PropTypes.object\n};","map":{"version":3,"sources":["/Users/adriendesart/Desktop/adwebsite/src/components/navitem.js"],"names":["React","Component","PropTypes","isVisible","NavItem","state","visible","handleScroll","setState","props","ancre","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","styles","navItem","navLink","subject","language","name","en","fr","icon","src","alt","propTypes","string","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AAEA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAA+B;AAAA;AAAA;AAAA,SAC1CI,KAD0C,GAClC;AACJC,MAAAA,OAAO,EAAG;AADN,KADkC;;AAAA,SAU1CC,YAV0C,GAU3B,MAAK;AAChB,WAAKC,QAAL,CAAc;AACVF,QAAAA,OAAO,EAAEH,SAAS,CAAC,KAAKM,KAAL,CAAWC,KAAZ,CAAT,KAAgC,WAAhC,GAA4C,IAA5C,GAAiD;AADhD,OAAd;AAGH,KAdyC;AAAA;;AAI1CC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKN,YAAvC;AACH;;AACDO,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKR,YAA1C;AACH;;AAODS,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAK,MAAA,KAAK,EAAEC,MAAM,CAACC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAED,MAAM,CAACE,OAAjB;AAA0B,MAAA,IAAI,EAAE,MAAM,KAAKV,KAAL,CAAWC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAEO,MAAM,CAACG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKX,KAAL,CAAWY,QAAX,KAAsB,IAAtB,GAA2B,KAAKZ,KAAL,CAAWa,IAAX,CAAgBC,EAA3C,GAA8C,KAAKd,KAAL,CAAWa,IAAX,CAAgBE,EAA5F,CADJ,EAEI;AAAK,MAAA,KAAK,EAAEP,MAAM,CAACQ,IAAnB;AAAyB,MAAA,GAAG,EAAE,KAAKhB,KAAL,CAAWgB,IAAX,CAAgBC,GAA9C;AAAmD,MAAA,GAAG,EAAE,KAAKjB,KAAL,CAAWgB,IAAX,CAAgBE,GAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAQH;;AA1ByC;AA6B9CvB,OAAO,CAACwB,SAAR,GAAoB;AAChBlB,EAAAA,KAAK,EAAGR,SAAS,CAAC2B,MADF;AAEhBR,EAAAA,QAAQ,EAAGnB,SAAS,CAAC2B,MAFL;AAGhBP,EAAAA,IAAI,EAAGpB,SAAS,CAAC4B,MAHD;AAIhBL,EAAAA,IAAI,EAAGvB,SAAS,CAAC4B;AAJD,CAApB","sourcesContent":["import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {isVisible} from './../utils/displayed';\n\nexport default class NavItem extends Component{\n    state = {\n        visible : false,\n    };\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n    };\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    };\n    handleScroll = () =>{\n        this.setState({\n            visible: isVisible(this.props.ancre) !== \"unvisible\"?true:false,\n        });\n    };\n\n    render(){\n\n        return(\n            <div style={styles.navItem}>\n                <a style={styles.navLink} href={\"#\" + this.props.ancre}>\n                    <span style={styles.subject}>{this.props.language===\"en\"?this.props.name.en:this.props.name.fr}</span>\n                    <img style={styles.icon} src={this.props.icon.src} alt={this.props.icon.alt}/>\n                </a>\n            </div>\n        )\n    }\n}\n\nNavItem.propTypes = {\n    ancre : PropTypes.string,\n    language : PropTypes.string,\n    name : PropTypes.object,\n    icon : PropTypes.object,\n}"]},"metadata":{},"sourceType":"module"}