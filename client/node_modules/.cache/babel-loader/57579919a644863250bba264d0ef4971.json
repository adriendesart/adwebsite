{"ast":null,"code":"var _jsxFileName = \"/Users/adriendesart/Desktop/adwebsite/src/pages/pictures.js\";\n//to do : tri des gallerie par catÃ©gories\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport Footer from \"../components/navigation/footer\";\nimport Navbar from \"../components/navigation/navbar\";\nimport Parallax from \"../components/parallax\";\nimport Woodboard from './../img/woodboard.jpg';\nimport { Photos } from './../photos/photos';\nimport PortfolioCard from \"../components/portfoliocard\";\nimport Gallery from \"./../img/th.svg\";\nimport Carousel from \"./../img/eye.svg\";\nexport default class PicturesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentCategory: \"All\",\n      carouselImage: [0, 0]\n    };\n    this.navbarItem = {\n      navPoint1: {\n        anchor: \"intro\",\n        name: {\n          en: \"Slideshow\",\n          fr: \"Diaporama\"\n        },\n        icon: {\n          src: Carousel,\n          alt: \"eye icon\"\n        }\n      },\n      navPoint2: {\n        anchor: \"gallery\",\n        name: {\n          en: \"Gallery\",\n          fr: \"Gallerie\"\n        },\n        icon: {\n          src: Gallery,\n          alt: \"gallery icon\"\n        }\n      }\n    };\n    this.photos = Photos;\n\n    this.getRandomPicture = () => {\n      let category = Math.floor(Math.random() * Math.floor(this.photos.length));\n      let picture = Math.floor(Math.random() * Math.floor(this.photos[category].pictures.length));\n      this.setState({\n        carouselImage: [category, picture]\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.getRandomPicture(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    let styles = {\n      title: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: this.props.deviceType === \"Mobile\" ? \"2rem\" : \"4rem\",\n        backgroundColor: \"white\",\n        opacity: \"0.75\",\n        margin: \"0\"\n      },\n      navigationPoint: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\"\n      },\n      carousel: {\n        padding: \"3rem\",\n        display: \"flex\",\n        flexFlow: \"row wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        maxWidth: \"\"\n      },\n      gallery: {\n        display: \"flex\",\n        flexFlow: \"row wrap\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n        padding: \"3rem\"\n      }\n    };\n\n    if (this.photos) {\n      var gallery = this.photos.map(item => React.createElement(PortfolioCard, {\n        language: this.props.language,\n        category: item.category,\n        img: item.pictures[0],\n        title: item.title,\n        description: item.description,\n        date: item.date,\n        photos: item.pictures,\n        deviceType: this.props.deviceType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      elements: this.navbarItem,\n      language: this.props.language,\n      setLanguage: this.props.setLanguage,\n      deviceType: this.props.deviceType,\n      deviceOrientation: this.props.deviceOrientation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Parallax, {\n      background: Woodboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.props.language === \"fr\" ? \"Portfolio\" : \"Gallery\"), React.createElement(\"section\", {\n      style: styles.carousel,\n      id: \"intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: styles.navigationPoint,\n      id: \"navPoint1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.photos[this.state.carouselImage[0]].pictures[this.state.carouselImage[1]].src,\n      alt: this.photos[this.state.carouselImage[0]].pictures[this.state.carouselImage[1]].alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      style: styles.gallery,\n      id: \"gallery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: styles.navigationPoint,\n      id: \"navPoint2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), gallery)), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\nPicturesPage.propTypes = {\n  language: PropTypes.string,\n  setLanguage: PropTypes.func,\n  deviceType: PropTypes.string,\n  deviceOrientation: PropTypes.string\n};","map":{"version":3,"sources":["/Users/adriendesart/Desktop/adwebsite/src/pages/pictures.js"],"names":["React","Component","Fragment","PropTypes","Footer","Navbar","Parallax","Woodboard","Photos","PortfolioCard","PicturesPage","state","currentCategory","carouselImage","navbarItem","navPoint1","anchor","name","en","fr","icon","src","Carousel","alt","navPoint2","Gallery","photos","getRandomPicture","category","Math","floor","random","length","picture","pictures","setState","componentDidMount","timerID","setInterval","componentWillUnmount","clearInterval","render","styles","title","width","textAlign","fontSize","props","deviceType","backgroundColor","opacity","margin","navigationPoint","position","top","left","carousel","padding","display","flexFlow","justifyContent","alignItems","maxWidth","gallery","map","item","language","description","date","setLanguage","deviceOrientation","propTypes","string","func"],"mappings":"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","sourcesContent":["//to do : tri des gallerie par catÃ©gories\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport Footer from \"../components/navigation/footer\";\nimport Navbar from \"../components/navigation/navbar\";\nimport Parallax from \"../components/parallax\";\nimport Woodboard from './../img/woodboard.jpg';\nimport {Photos} from './../photos/photos';\nimport PortfolioCard from \"../components/portfoliocard\";\nimport Gallery from \"./../img/th.svg\";\nimport Carousel from \"./../img/eye.svg\";\n\nexport default class PicturesPage extends Component{\n    state ={\n        currentCategory : \"All\",\n        carouselImage : [0,0],\n    }\n    navbarItem = {\n        navPoint1 : {\n            anchor :\"intro\",\n            name:{\n                en:\"Slideshow\",\n                fr:\"Diaporama\",\n            },\n            icon:{\n                src:Carousel,\n                alt:\"eye icon\",\n            },\n        },\n        navPoint2 : {\n            anchor :\"gallery\",\n            name:{\n                en:\"Gallery\",\n                fr:\"Gallerie\",\n            },\n            icon:{\n                src:Gallery,\n                alt:\"gallery icon\",\n            },\n        },\n    }\n    photos = Photos;\n    getRandomPicture =()=>{\n        let category = Math.floor(Math.random() * Math.floor(this.photos.length));\n        let picture = Math.floor(Math.random() * Math.floor(this.photos[category].pictures.length));\n        this.setState({\n            carouselImage : [category,picture]\n        })\n    }\n    componentDidMount(){\n        this.timerID = setInterval(\n          () => this.getRandomPicture(),\n          5000\n        );\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    render(){\n        let styles = {\n            title :{\n                width : \"100%\",\n                textAlign : \"center\",\n                fontSize : this.props.deviceType===\"Mobile\"?\"2rem\":\"4rem\",\n                backgroundColor :\"white\",\n                opacity : \"0.75\",\n                margin : \"0\",\n            },\n            navigationPoint:{\n                position : \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n            },\n            carousel :{\n                padding : \"3rem\",\n                display: \"flex\",\n                flexFlow:\"row wrap\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                maxWidth: \"\"\n            },\n            gallery :{\n                display: \"flex\",\n                flexFlow:\"row wrap\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\",\n                padding : \"3rem\",\n            }\n        }\n        if(this.photos){\n            var gallery = this.photos.map(item => (\n                <PortfolioCard\n                    language={this.props.language}\n                    category={item.category}\n                    img={item.pictures[0]}\n                    title={item.title}\n                    description={item.description}\n                    date={item.date}\n                    photos={item.pictures}\n                    deviceType={this.props.deviceType}\n                />\n            ))\n        }\n        \n        return(\n            <Fragment>\n                <Navbar\n                    elements={this.navbarItem}\n                    language={this.props.language}\n                    setLanguage={this.props.setLanguage}\n                    deviceType={this.props.deviceType}\n                    deviceOrientation={this.props.deviceOrientation}\n                />\n                <Parallax background={Woodboard}>\n                    <h1 style={styles.title}>{this.props.language===\"fr\"?\"Portfolio\":\"Gallery\"}</h1>\n                    <section style={styles.carousel} id=\"intro\">\n                        <span style={styles.navigationPoint} id=\"navPoint1\"/>\n                        <img src={this.photos[this.state.carouselImage[0]].pictures[this.state.carouselImage[1]].src} alt={this.photos[this.state.carouselImage[0]].pictures[this.state.carouselImage[1]].alt}/>\n                    </section>\n                    <section style={styles.gallery} id=\"gallery\">\n                        <span style={styles.navigationPoint} id=\"navPoint2\"/>\n                        {gallery}\n                    </section>\n                </Parallax>\n                <Footer/>\n            </Fragment>\n        )\n    }\n}\n\nPicturesPage.propTypes ={\n    language : PropTypes.string,\n    setLanguage : PropTypes.func,\n    deviceType : PropTypes.string,\n    deviceOrientation : PropTypes.string,\n}"]},"metadata":{},"sourceType":"module"}